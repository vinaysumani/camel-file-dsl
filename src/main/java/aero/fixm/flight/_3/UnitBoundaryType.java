//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.12.05 at 01:45:39 PM IST 
//


package aero.fixm.flight._3;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import aero.faa.nas._3.NasUnitBoundaryType;
import aero.fixm.base._3.AtcUnitReferenceType;


/**
 * 
 *             Represents an Unit boundary that will be traversed En Route. 
 *             .Unit Boundary: Identifies the unit whose boundary the flight is expected to traverse, 
 *             based on the planned route of flight and altitude. 
 *          
 * 
 * <p>Java class for UnitBoundaryType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="UnitBoundaryType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.fixm.aero/base/3.0}AtcUnitReferenceType">
 *       &lt;sequence>
 *         &lt;element name="boundaryCrossingCoordinated" type="{http://www.fixm.aero/flight/3.0}BoundaryCrossingType" minOccurs="0"/>
 *         &lt;element name="boundaryCrossingProposed" type="{http://www.fixm.aero/flight/3.0}BoundaryCrossingType" minOccurs="0"/>
 *         &lt;element name="downstreamUnit" type="{http://www.fixm.aero/base/3.0}AtcUnitReferenceType" minOccurs="0"/>
 *         &lt;element name="handoff" type="{http://www.fixm.aero/flight/3.0}HandoffType" minOccurs="0"/>
 *         &lt;element name="upstreamUnit" type="{http://www.fixm.aero/base/3.0}AtcUnitReferenceType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="unitBoundaryIndicator" type="{http://www.fixm.aero/flight/3.0}UnitBoundaryIndicatorType" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "UnitBoundaryType", propOrder = {
    "boundaryCrossingCoordinated",
    "boundaryCrossingProposed",
    "downstreamUnit",
    "handoff",
    "upstreamUnit"
})
@XmlSeeAlso({
    NasUnitBoundaryType.class
})
public class UnitBoundaryType
    extends AtcUnitReferenceType
{

    protected BoundaryCrossingType boundaryCrossingCoordinated;
    protected BoundaryCrossingType boundaryCrossingProposed;
    protected AtcUnitReferenceType downstreamUnit;
    protected HandoffType handoff;
    protected AtcUnitReferenceType upstreamUnit;
    @XmlAttribute(name = "unitBoundaryIndicator")
    protected UnitBoundaryIndicatorType unitBoundaryIndicator;

    /**
     * Gets the value of the boundaryCrossingCoordinated property.
     * 
     * @return
     *     possible object is
     *     {@link BoundaryCrossingType }
     *     
     */
    public BoundaryCrossingType getBoundaryCrossingCoordinated() {
        return boundaryCrossingCoordinated;
    }

    /**
     * Sets the value of the boundaryCrossingCoordinated property.
     * 
     * @param value
     *     allowed object is
     *     {@link BoundaryCrossingType }
     *     
     */
    public void setBoundaryCrossingCoordinated(BoundaryCrossingType value) {
        this.boundaryCrossingCoordinated = value;
    }

    /**
     * Gets the value of the boundaryCrossingProposed property.
     * 
     * @return
     *     possible object is
     *     {@link BoundaryCrossingType }
     *     
     */
    public BoundaryCrossingType getBoundaryCrossingProposed() {
        return boundaryCrossingProposed;
    }

    /**
     * Sets the value of the boundaryCrossingProposed property.
     * 
     * @param value
     *     allowed object is
     *     {@link BoundaryCrossingType }
     *     
     */
    public void setBoundaryCrossingProposed(BoundaryCrossingType value) {
        this.boundaryCrossingProposed = value;
    }

    /**
     * Gets the value of the downstreamUnit property.
     * 
     * @return
     *     possible object is
     *     {@link AtcUnitReferenceType }
     *     
     */
    public AtcUnitReferenceType getDownstreamUnit() {
        return downstreamUnit;
    }

    /**
     * Sets the value of the downstreamUnit property.
     * 
     * @param value
     *     allowed object is
     *     {@link AtcUnitReferenceType }
     *     
     */
    public void setDownstreamUnit(AtcUnitReferenceType value) {
        this.downstreamUnit = value;
    }

    /**
     * Gets the value of the handoff property.
     * 
     * @return
     *     possible object is
     *     {@link HandoffType }
     *     
     */
    public HandoffType getHandoff() {
        return handoff;
    }

    /**
     * Sets the value of the handoff property.
     * 
     * @param value
     *     allowed object is
     *     {@link HandoffType }
     *     
     */
    public void setHandoff(HandoffType value) {
        this.handoff = value;
    }

    /**
     * Gets the value of the upstreamUnit property.
     * 
     * @return
     *     possible object is
     *     {@link AtcUnitReferenceType }
     *     
     */
    public AtcUnitReferenceType getUpstreamUnit() {
        return upstreamUnit;
    }

    /**
     * Sets the value of the upstreamUnit property.
     * 
     * @param value
     *     allowed object is
     *     {@link AtcUnitReferenceType }
     *     
     */
    public void setUpstreamUnit(AtcUnitReferenceType value) {
        this.upstreamUnit = value;
    }

    /**
     * Gets the value of the unitBoundaryIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link UnitBoundaryIndicatorType }
     *     
     */
    public UnitBoundaryIndicatorType getUnitBoundaryIndicator() {
        return unitBoundaryIndicator;
    }

    /**
     * Sets the value of the unitBoundaryIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link UnitBoundaryIndicatorType }
     *     
     */
    public void setUnitBoundaryIndicator(UnitBoundaryIndicatorType value) {
        this.unitBoundaryIndicator = value;
    }

}
